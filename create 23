



CONCLUSION
A graphical user interface (GUI) is a desktop interface that allows you to communicate with computers. They carry out various activities on desktop computers, laptops, and other mobile devices. Text-Editors and other graphical user interface applications build, read, download, and erase various types of files













# This Marksheet can be snapshotted and printed out
# as a report card for the semester

# This code has been contributed by Soumi Bardhan
The code starts by creating a new tkinter window.
The title of the window is “MARKSHEET.”
The geometry of the window is set to be 700×250 pixels.
Next, four objects are created: an entry object for holding data, an e1 object for holding student information, an e2 object for holding teacher information, and an e3 object for holding test information.
Each of these objects has a corresponding variable assigned to it.
For example, the entry object has a variable named e1 .
This variable stores the data entered into the window.
Similarly, each of the other objects also has a corresponding variable.
For example, the e2 object stores student information, and its corresponding variable is named s1 .
The same goes for the other variables in each of these objects.
Now that all of the variables have been initialized, some code is executed to create buttons and labels onscreen.
A button named btnStart is created and given a label of “Start.”
A label called lblMarkName is also created and given a text value of “Mark Sheet.”
Finally, two labels are created: one called lblStudentName and another called lblTeacherName .
These labels will display
The code creates a new tkinter window and assigns it the title “MARKSHEET”.
The geometry for the window is set to be 700×250.
Next, four objects are created which will be used to store data in the GUI.
These objects are named e1, e2, e3, and e4.
Finally, seven entries are created in each of these objects which will hold data about the students in the class.
The code starts by storing a variable, tot, to hold the total number of credits for each grade.
The code then loops through each of the grades in the data set and calculates the total number of credits for that grade.
For grades A, B, and C, the code adds 40, 36, and 32 respectively to tot.
For grades D and P, the code adds 24 and 28 respectively to tot.
Finally, for grades F and G (which have no subject credit), tot is set to 0.
The next part of the code sets up labels for each column in a table-like structure called a grid.
The labels are created using tk.Label() function calls with appropriate text values assigned as arguments.
The grid() method places these labels at respective positions in the table using row=row number/column=column number coordinates (e.g., tk.Label(master,”40″) will be placed at position (4, 4) in the table).
When all of the labels have been created, Tot is incremented by 40 for grades A-D and by 36 for grades E-P. Next, if e5 is equal to “A”, “B”, or “C”, then instead
The code displays the total subject credits and SGPA according to grades entered.
The code starts by storing the total marks in a variable called tot.
Next, it calculates the total credits for grade A by adding 40 to tot.
Similarly, it calculates the total credits for grade B, 36, and so on.
When it comes to grades below A, the code uses grid() method to place the widgets at respective positions in a table like structure.
For grades above A, there is no need to use grid() method as all marks are displayed in one line.
The last part of the code checks if any of the variables e5, e6 have values that match those of “A”.
If they do, then the corresponding label is
The code starts with a few basic labels for the different parts of the user interface.
The first label is “master”.
This is the main window that contains all of the other labels and controls.
Next, there are three labels for grades: CS 201, CS 202, and MA 201.
These labels will show the student’s current grade in each course.
The next set of labels shows subject credits: Sub Credit, 4, 4, and 3.
These labels will show how many credit hours have been earned in each subject area.
Note that these values are rounded to two decimal places (e.g., Sub Credit = .5).
Finally, there are four labels for credit obtained: Credit obtained, 1/2 Credit obtained, 3/4 Credit obtained, and Full Credit obtained.
These labels will show how much credit has been earned in each subject area so far (rounded to two decimal places).
The code creates a grid with six rows and six columns.
The first row contains three labels: CS 201, CS 202, and MA 201.
The second row contains four labels: EC 201, Grade, Sub Credit, and Credit obtained.
The third row contains two labels: 4 and 3.
The fourth row contains one label: 4.
The fifth row contains one label: 3.
The sixth row has no labels.
The code also creates a grid with six rows and six columns that displays the grades for the subject credits in alphabetical order.


CONCLUSION
A graphical user interface (GUI) is a desktop interface that allows you to communicate with computers. They carry out various activities on desktop computers, laptops, and other mobile devices. Text-Editors and other graphical user interface applications build, read, download, and erase various types of files
